---
import Layout from "../layouts/Layout.astro";
import Footer from "../components/Footer.astro";
import { docsSections } from "../data/docs/sections";
import { getContent } from "../data/docs/content";
import DocsHeader from "../components/DocsHeader.astro";
import ThemeToggle from "../components/ThemeToggle.astro";

const { slug } = Astro.params;
const currentPage = slug || "introduction";

// Get content for the current page
const content = getContent("", currentPage);
---

<Layout title="Documentation | ComputeSDK">
  <div class="min-h-screen bg-white dark:bg-gray-900">
    <DocsHeader />

    <div class="mx-auto flex max-w-7xl px-4 sm:px-6 lg:px-8">
      <!-- Sidebar Navigation -->
      <div
        class="hidden w-64 shrink-0 border-r border-gray-200 dark:border-gray-800 md:block"
      >
        <div
          class="sticky top-16 h-[calc(100vh-4rem)] overflow-y-auto py-6 pr-4"
        >
          <nav>
            {
              docsSections.map((section) => (
                <div data-key={section.slug} class="mb-8">
                  <h3 class="mb-2 text-sm font-semibold uppercase tracking-wider text-gray-500 dark:text-gray-400">
                    {section.title}
                  </h3>
                  <ul class="space-y-1">
                    {section.pages.map((page) => (
                      <li data-key={page.slug}>
                        <a
                          href={`/docs/${page.slug}`}
                          class={`block rounded-md px-3 py-2 text-sm ${
                            currentPage === page.slug
                              ? "bg-blue-50 text-blue-600 dark:bg-blue-900/50 dark:text-blue-400"
                              : "text-gray-700 hover:bg-gray-100 dark:text-gray-300 dark:hover:bg-gray-800"
                          }`}
                        >
                          {page.title}
                        </a>
                      </li>
                    ))}
                  </ul>
                </div>
              ))
            }
          </nav>
        </div>
      </div>

      <!-- Main Content -->
      <main
        class="min-w-0 flex-1 border-gray-200 dark:border-gray-800 lg:border-l"
      >
        <div
          class="prose prose-gray dark:prose-invert max-w-none overflow-y-auto px-4 py-8 lg:px-8"
        >
          <div class="mx-auto max-w-3xl">
            {
              content ? (
                content.content.map((node, index) => {
                  switch (node.type) {
                    case "h1":
                      return (
                        <h1
                          id={node.id}
                          class="text-4xl font-bold tracking-tight text-gray-900 dark:text-white sm:text-5xl"
                        >
                          {node.text}
                        </h1>
                      );
                    case "h2":
                      return (
                        <h2
                          id={node.id}
                          class="mt-10 scroll-mt-20 text-2xl font-semibold text-gray-800 dark:text-gray-200"
                        >
                          {node.text}
                        </h2>
                      );
                    case "h3":
                      return (
                        <h3
                          id={node.id}
                          class="mt-8 scroll-mt-20 text-xl font-semibold text-gray-800 dark:text-gray-200"
                        >
                          {node.text}
                        </h3>
                      );
                    case "p":
                      return (
                        <p class="mt-4 text-base leading-7 text-gray-600 dark:text-gray-300">
                          {node.text}
                        </p>
                      );
                    case "ul":
                      return (
                        <ul class="mt-4 list-disc space-y-2 pl-6 text-gray-600 dark:text-gray-300">
                          {node.items.map((item, i) => (
                            <li data-key={i} class="text-base leading-7">
                              {item}
                            </li>
                          ))}
                        </ul>
                      );
                    case "code":
                      return (
                        <pre
                          class={`language-${node.language} mt-4 overflow-x-auto rounded-lg bg-gray-50 p-4 dark:bg-gray-800`}
                        >
                          <code class={`language-${node.language} text-sm`}>
                            {node.code}
                          </code>
                        </pre>
                      );
                    case "table":
                      return (
                        <div class="mt-6 overflow-hidden overflow-x-auto">
                          <table class="min-w-full divide-y divide-gray-200 dark:divide-gray-700">
                            <thead>
                              <tr>
                                {node.headers.map((header) => (
                                  <th data-key={header}>{header}</th>
                                ))}
                              </tr>
                            </thead>
                            <tbody>
                              {node.rows.map((row, i) => (
                                <tr data-key={i}>
                                  {row.map((cell, j) => (
                                    <td data-key={j}>{cell}</td>
                                  ))}
                                </tr>
                              ))}
                            </tbody>
                          </table>
                        </div>
                      );
                    default:
                      return null;
                  }
                })
              ) : (
                <div class="py-12 text-center">
                  <h1>Page not found</h1>
                  <p>The requested documentation page could not be found.</p>
                  <a
                    href="/docs"
                    class="text-blue-600 hover:underline dark:text-blue-400"
                  >
                    Go to documentation home
                  </a>
                </div>
              )
            }
          </div>
        </div>
      </main>

      <!-- Table of Contents -->
      {
        content &&
          content.content.some((node) => node.type.startsWith("h2")) && (
            <div class="hidden w-64 shrink-0 border-l border-gray-200 dark:border-gray-800 lg:block">
              <div class="sticky top-16 h-[calc(100vh-4rem)] overflow-y-auto px-4 py-8">
                <h3 class="text-sm font-medium text-gray-500 dark:text-gray-400">
                  On this page
                </h3>
                <nav class="mt-4 space-y-2">
                  {content.content
                    .filter(
                      (
                        node,
                      ): node is {
                        type: "h2" | "h3";
                        text: string;
                        id?: string;
                      } =>
                        node.type.startsWith("h2") ||
                        node.type.startsWith("h3"),
                    )
                    .map((heading) => (
                      <a
                        href={`#${heading.id || ""}`}
                        class={`block text-sm ${
                          heading.type === "h2"
                            ? "font-medium text-gray-900 dark:text-white"
                            : "ml-4 text-gray-500 dark:text-gray-400"
                        } hover:text-blue-600 dark:hover:text-blue-400`}
                      >
                        {heading.text}
                      </a>
                    ))}
                </nav>
              </div>
            </div>
          )
      }
    </div>
  </div>
  <footer
    class="mt-auto w-full border-t border-gray-200 bg-gray-50 dark:border-gray-800 dark:bg-gray-900"
  >
    <div class="mx-auto max-w-7xl px-6 py-4 sm:px-6 lg:px-8">
      <div class="flex flex-col items-center justify-between gap-4 sm:flex-row">
        <div class="flex-1">
          <Footer>
            <ThemeToggle />
          </Footer>
        </div>
      </div>
    </div>
  </footer>
</Layout>

<style>
  .prose {
    max-width: 100%;
  }

  .prose pre {
    @apply overflow-x-auto rounded-lg bg-gray-50 p-4 dark:bg-gray-800;
  }

  .prose code {
    @apply rounded bg-gray-100 px-1.5 py-0.5 text-sm text-gray-800 dark:bg-gray-800 dark:text-gray-200;
  }

  .prose pre code {
    @apply bg-transparent p-0;
  }

  .prose table {
    @apply min-w-full divide-y divide-gray-200 dark:divide-gray-700;
  }

  .prose th {
    @apply px-6 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-500 dark:text-gray-400;
  }

  .prose td {
    @apply whitespace-nowrap px-6 py-4 text-sm text-gray-700 dark:text-gray-300;
  }

  .prose tr {
    @apply hover:bg-gray-50 dark:hover:bg-gray-800/50;
  }

  .prose a {
    @apply text-blue-600 hover:text-blue-800 dark:text-blue-400 dark:hover:text-blue-300;
  }
</style>
