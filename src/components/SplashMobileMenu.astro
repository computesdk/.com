---
// Custom mobile menu for splash pages only
const currentPath = Astro.url.pathname;
const isDocsPage = currentPath.startsWith('/docs');

// Navigation items for splash pages
const splashNavItems = [
  { label: 'Home', href: '/' },
  { label: 'Features', href: '/features' },
  { label: 'Use Cases', href: '/use-cases' },
  { label: 'Pricing', href: '/pricing' },
  { label: 'Docs', href: '/docs/getting-started/introduction' },
  { label: 'Blog', href: '/blog' },
  { label: 'Contact', href: '/contact' },
];
---

{!isDocsPage && (
  <div class="splash-mobile-menu">
    <splash-mobile-toggle
      class="splash-mobile-menu-toggle"
      aria-label="Toggle mobile menu"
      aria-expanded="false"
    >
      <button class="splash-menu-button">
        <div class="splash-hamburger-icon">
          <span></span>
          <span></span>
          <span></span>
        </div>
      </button>
    </splash-mobile-toggle>

    <div class="splash-mobile-drawer" data-menu-drawer>
      <nav class="splash-mobile-nav">
        <ul class="splash-mobile-nav-list">
          {splashNavItems.map((item) => (
            <li>
              <a 
                href={item.href} 
                class={`splash-mobile-nav-link ${currentPath === item.href ? 'active' : ''}`}
              >
                {item.label}
              </a>
            </li>
          ))}
        </ul>
      </nav>
    </div>
  </div>
)}

<script>
  class SplashMobileToggle extends HTMLElement {
    private isOpen = false;
    private button: HTMLButtonElement;
    private drawer: HTMLElement;

    constructor() {
      super();
      this.button = this.querySelector('.splash-menu-button')!;
      this.drawer = document.querySelector('.splash-mobile-drawer')!;
      
      this.setupEventListeners();
    }

    private setupEventListeners() {
      // Toggle menu on button click
      this.button?.addEventListener('click', (e) => {
        e.stopPropagation();
        this.toggleMenu();
      });
      
      // Close menu on drawer background click
      this.drawer?.addEventListener('click', (e) => {
        if (e.target === this.drawer || e.target === this.drawer.querySelector('::before')) {
          this.closeMenu();
        }
      });
      
      // Close menu on escape key
      document.addEventListener('keydown', (e) => {
        if (e.key === 'Escape' && this.isOpen) {
          this.closeMenu();
        }
      });

      // Close menu when clicking outside
      document.addEventListener('click', (e) => {
        if (this.isOpen && !this.contains(e.target as Node) && !this.drawer?.contains(e.target as Node)) {
          this.closeMenu();
        }
      });
      
      // Close menu on navigation
      this.drawer?.querySelectorAll('.splash-mobile-nav-link').forEach(link => {
        link.addEventListener('click', () => this.closeMenu());
      });
    }

    private toggleMenu() {
      if (this.isOpen) {
        this.closeMenu();
      } else {
        this.openMenu();
      }
    }

    private openMenu() {
      this.isOpen = true;
      this.setAttribute('aria-expanded', 'true');
      this.drawer?.classList.add('active');
      document.body.style.overflow = 'hidden';
    }

    private closeMenu() {
      this.isOpen = false;
      this.setAttribute('aria-expanded', 'false');
      this.drawer?.classList.remove('active');
      document.body.style.overflow = '';
    }
  }

  customElements.define('splash-mobile-toggle', SplashMobileToggle);
</script>

<style>
  .splash-mobile-menu {
    position: relative;
    display: none;
    z-index: 1000;
  }

  /* Show only on mobile devices for non-docs pages */
  @media (max-width: 768px) {
    .splash-mobile-menu {
      display: block;
    }
  }

  .splash-menu-button {
    background: rgba(255, 255, 255, 0.1);
    backdrop-filter: blur(10px);
    border: 1px solid rgba(255, 255, 255, 0.2);
    border-radius: 8px;
    padding: 8px;
    cursor: pointer;
    transition: all 0.2s ease;
    color: var(--sl-color-white);
  }

  .splash-menu-button:hover {
    background: rgba(255, 255, 255, 0.15);
    border-color: rgba(255, 255, 255, 0.3);
  }

  .splash-hamburger-icon {
    width: 20px;
    height: 14px;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
  }

  .splash-hamburger-icon span {
    width: 100%;
    height: 2px;
    background: currentColor;
    border-radius: 1px;
    transition: all 0.3s ease;
  }

  /* Animated hamburger to X */
  splash-mobile-toggle[aria-expanded="true"] .splash-hamburger-icon span:nth-child(1) {
    transform: rotate(45deg) translate(4px, 4px);
  }

  splash-mobile-toggle[aria-expanded="true"] .splash-hamburger-icon span:nth-child(2) {
    opacity: 0;
  }

  splash-mobile-toggle[aria-expanded="true"] .splash-hamburger-icon span:nth-child(3) {
    transform: rotate(-45deg) translate(4px, -4px);
  }

  /* Mobile drawer */
  .splash-mobile-drawer {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    background: linear-gradient(135deg, rgba(16, 185, 129, 0.95) 0%, rgba(5, 150, 105, 0.95) 100%);
    backdrop-filter: blur(20px);
    border-bottom: 1px solid rgba(255, 255, 255, 0.2);
    box-shadow: 0 8px 32px rgba(0, 0, 0, 0.2);
    transform: translateY(-100%);
    transition: transform 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    z-index: 999;
    padding-top: 4rem; /* Space for the header */
  }

  .splash-mobile-drawer.active {
    transform: translateY(0);
  }

  .splash-mobile-nav {
    padding: 1rem 0 2rem;
    max-width: 1200px;
    margin: 0 auto;
  }

  .splash-mobile-nav-list {
    list-style: none;
    margin: 0;
    padding: 0 1.5rem;
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
  }

  .splash-mobile-nav-link {
    display: block;
    padding: 1rem 1.5rem;
    color: rgba(255, 255, 255, 0.9);
    text-decoration: none;
    font-size: 1.1rem;
    font-weight: 500;
    border-radius: 12px;
    transition: all 0.2s ease;
    border: 1px solid transparent;
    background: rgba(255, 255, 255, 0.05);
  }

  .splash-mobile-nav-link:hover {
    color: white;
    background: rgba(255, 255, 255, 0.1);
    border-color: rgba(255, 255, 255, 0.2);
    transform: translateY(-1px);
  }

  .splash-mobile-nav-link.active {
    color: white;
    background: rgba(255, 255, 255, 0.15);
    border-color: rgba(255, 255, 255, 0.3);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
  }

  /* Light theme support */
  :global([data-theme='light']) .splash-menu-button {
    background: rgba(0, 0, 0, 0.05);
    border-color: rgba(0, 0, 0, 0.1);
    color: var(--sl-color-gray-1);
  }

  :global([data-theme='light']) .splash-menu-button:hover {
    background: rgba(0, 0, 0, 0.1);
    border-color: rgba(0, 0, 0, 0.2);
  }

  :global([data-theme='light']) .splash-mobile-drawer {
    background: linear-gradient(135deg, rgba(16, 185, 129, 0.9) 0%, rgba(5, 150, 105, 0.9) 100%);
  }

  /* Overlay for closing when clicking outside */
  .splash-mobile-drawer::before {
    content: '';
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: rgba(0, 0, 0, 0.3);
    z-index: -1;
    opacity: 0;
    transition: opacity 0.3s ease;
  }

  .splash-mobile-drawer.active::before {
    opacity: 1;
  }
</style>