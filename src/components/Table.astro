---
// Table.astro - A reusable table component

interface Column {
  key: string;
  header: string;
  width?: string;
  align?: "left" | "center" | "right";
}

interface TableProps<T = any> {
  columns: Column[];
  data: T[];
  className?: string;
  rowClassName?: string;
  headerClassName?: string;
  cellClassName?: string;
}

const {
  columns,
  data,
  className = "",
  rowClassName = "",
  headerClassName = "",
  cellClassName = "",
} = Astro.props as TableProps;
---

<div
  class={`overflow-hidden rounded-lg border border-gray-200 dark:border-gray-700 shadow-sm ${className}`}
>
  <table class="w-full">
    <thead>
      <tr class="bg-gray-50 dark:bg-gray-800">
        {
          columns.map((column) => (
            <th
              scope="col"
              class={[
                "px-6 py-3 text-sm font-medium text-gray-500 dark:text-gray-400",
                `text-${column.align || "left"}`,
                "border-b border-gray-200 dark:border-gray-700",
                headerClassName,
              ].join(" ")}
              style={column.width ? { width: column.width } : {}}
            >
              {column.header}
            </th>
          ))
        }
      </tr>
    </thead>
    <tbody
      class="divide-y divide-gray-200 bg-white dark:divide-gray-700 dark:bg-gray-900"
    >
      {
        data.map((row, rowIndex) => (
          <tr
            class={[
              "hover:bg-gray-50 dark:hover:bg-gray-800/50",
              rowIndex % 2 === 0
                ? "bg-white dark:bg-gray-900"
                : "bg-gray-50 dark:bg-gray-800/30",
              rowClassName,
            ].join(" ")}
          >
            {columns.map((column) => (
              <td
                class={[
                  "px-6 py-4 text-sm text-gray-900 dark:text-gray-100",
                  `text-${column.align || "left"}`,
                  "border-b border-gray-100 dark:border-gray-800",
                  cellClassName,
                ].join(" ")}
              >
                {row[column.key]}
              </td>
            ))}
          </tr>
        ))
      }
    </tbody>
  </table>
</div>

<style>
  /* Responsive table styles */
  @media (max-width: 768px) {
    table {
      display: block;
    }
    thead {
      display: none;
    }
    tbody {
      display: block;
    }
    tr {
      display: block;
      margin-bottom: 1rem;
      border: 1px solid #e5e7eb;
      border-radius: 0.375rem;
      padding: 0.75rem;
    }
    td {
      display: flex;
      justify-content: space-between;
      padding: 0.5rem 0;
      text-align: right !important;
      border: none !important;
    }
    td::before {
      content: attr(data-label);
      font-weight: 600;
      margin-right: 1rem;
      text-align: left;
    }
  }
</style>
